// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Id from "rescript/lib/es6/belt_Id.js";
import * as Belt_Map from "rescript/lib/es6/belt_Map.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as TodoInput from "./TodoInput.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as TodoEntity from "../entities/TodoEntity.mjs";
import * as TodoFilter from "./TodoFilter.mjs";
import * as TodoListItem from "./TodoListItem.mjs";

var cmp = Caml_obj.compare;

var IntComparator = Belt_Id.MakeComparable({
      cmp: cmp
    });

function App(Props) {
  var match = React.useState(function () {
        return Belt_Map.make(IntComparator);
      });
  var setTodoMap = match[1];
  var match$1 = React.useState(function () {
        return /* All */0;
      });
  var setFilter = match$1[1];
  var filter = match$1[0];
  var handleAddTodo = function (text) {
    Curry._1(setTodoMap, (function (prev) {
            return TodoEntity.add(prev, text);
          }));
  };
  var handleRemoveTodo = function (id) {
    Curry._1(setTodoMap, (function (prev) {
            return TodoEntity.remove(prev, id);
          }));
  };
  var handleUpdateTodo = function (id, payload) {
    Curry._1(setTodoMap, (function (prev) {
            return TodoEntity.update(prev, id, payload);
          }));
  };
  var handleSelectFilter = function (f) {
    Curry._1(setFilter, (function (param) {
            return f;
          }));
  };
  return React.createElement("div", {
              className: "app"
            }, React.createElement("h1", {
                  className: "app-title"
                }, "RESCRIPT TO DO"), React.createElement(TodoInput.make, {
                  addTodo: handleAddTodo
                }), React.createElement(TodoFilter.make, {
                  value: filter,
                  onChange: handleSelectFilter
                }), React.createElement("ol", {
                  className: "list-container"
                }, Belt_Array.map(Belt_Map.toArray(TodoEntity.keep(match[0], filter)), (function (param) {
                        return React.createElement(TodoListItem.make, {
                                    todo: param[1],
                                    removeTodo: handleRemoveTodo,
                                    updateTodo: handleUpdateTodo,
                                    key: String(param[0])
                                  });
                      }))));
}

var make = App;

export {
  IntComparator ,
  make ,
}
/* IntComparator Not a pure module */
