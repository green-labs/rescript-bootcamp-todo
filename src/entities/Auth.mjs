// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Decco from "decco/src/Decco.mjs";
import * as Fetch from "bs-fetch/src/Fetch.mjs";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Js_json from "rescript/lib/es6/js_json.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function user_encode(v) {
  return Js_dict.fromArray([
              [
                "first_name",
                Decco.stringToJson(v.firstName)
              ],
              [
                "last_name",
                Decco.stringToJson(v.lastName)
              ],
              [
                "username",
                Decco.stringToJson(v.userName)
              ],
              [
                "avatar",
                Decco.stringToJson(v.avatar)
              ]
            ]);
}

function user_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var firstName = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "first_name"), null));
  if (firstName.TAG === /* Ok */0) {
    var lastName = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "last_name"), null));
    if (lastName.TAG === /* Ok */0) {
      var userName = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "username"), null));
      if (userName.TAG === /* Ok */0) {
        var avatar = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "avatar"), null));
        if (avatar.TAG === /* Ok */0) {
          return {
                  TAG: /* Ok */0,
                  _0: {
                    firstName: firstName._0,
                    lastName: lastName._0,
                    userName: userName._0,
                    avatar: avatar._0
                  }
                };
        }
        var e = avatar._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".avatar" + e.path,
                  message: e.message,
                  value: e.value
                }
              };
      }
      var e$1 = userName._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".username" + e$1.path,
                message: e$1.message,
                value: e$1.value
              }
            };
    }
    var e$2 = lastName._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".last_name" + e$2.path,
              message: e$2.message,
              value: e$2.value
            }
          };
  }
  var e$3 = firstName._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".first_name" + e$3.path,
            message: e$3.message,
            value: e$3.value
          }
        };
}

function useUser(param) {
  var match = React.useState(function () {
        
      });
  var setUser = match[1];
  React.useEffect((function () {
          Js_promise.then_((function (json) {
                  var user$p = user_decode(json);
                  if (user$p.TAG === /* Ok */0) {
                    var user$p$1 = user$p._0;
                    Curry._1(setUser, (function (param) {
                            return user$p$1;
                          }));
                  } else {
                    console.log(user$p._0);
                  }
                  return Promise.resolve(undefined);
                }), Js_promise.then_(Fetch.$$Response.json, fetch("https://random-data-api.com/api/v2/users?size=1")));
        }), [setUser]);
  return match[0];
}

export {
  user_encode ,
  user_decode ,
  useUser ,
}
/* react Not a pure module */
